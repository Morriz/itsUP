{%- macro treedot(dict,string) %}
    {%- for key, value in dict.items() -%}
        {%- if value is mapping -%}
            {%- if string -%}
                {%- set str = string ~ '.' ~ key  -%}
            {%- else -%}
                {%- set str = key  -%}
            {%- endif -%}
            {{ treedot(value,str) }}
        {%- else -%}
            {%- if string %}
                {{ string ~ '.' ~ key }} = {{ value }}
            {%- else %}
                {{ key }} = {{ value }}
            {%- endif -%}
        {%- endif -%}
    {%- endfor -%}
{%- endmacro -%}
---
networks:
  proxynet:
    external: true

services:
{%- set p = project %}
{%- for s in project.services %}
  {#- The service needs discovery labels when one of its ingress entries has a domain or tls and is not using hostport #}
  {#- (hostport services are handled by static routers because of their need to restart anyway for new entrypoints) #}
  {%- set needs_discovery = (list(s.ingress | selectattr('domain')) + list(s.ingress | selectattr('tls'))) | length > list(s.ingress | selectattr('domain') | selectattr('hostport')) | length %}
  {%- set has_ingress = s.ingress | length > 0 %}
  {{ project.name }}-{{ s.host }}:
  {%- if s.command %}
    command: {{ s.command }}
  {%- endif %}
  {%- if s.depends_on %}
    depends_on:
    {%- if s.depends_on is mapping %}
      {%- for key, dep in s.depends_on.items() %}
      {{ project.name }}-{{ key }}:
        {{ dep }}
      {%- endfor %}
    {%- else %}
      {%- for dep in s.depends_on %}
      - {{ project.name }}-{{ dep }}
      {%- endfor %}
    {%- endif %}
  {%- endif %}
  {%- if s.env.model_dump() | length > 0 %}
    environment:
    {%- for k, v in s.env %}
      - '{{ k }}={{ (v ~ '').replace("'", "''") }}'
    {%- endfor %}
  {%- endif %}
  {%- if s.ingress | length > 0 %}
    expose:
    {%- for i in s.ingress %}
      - {{ i.port }}/{{ Protocol[i.protocol].value }}
    {%- endfor %}
  {%- endif %}
    image: {{ s.image }}
  {%- if needs_discovery or (s.labels | length > 0) %}
    labels:
    {%- if needs_discovery %}
      - traefik.enable=true
      - traefik.docker.network=proxynet
      {%- for i in s.ingress %}
        {%- if not i.hostport and (i.domain or (i.tls and i.tls.main)) %}
          {%- set name = project.name ~ '-' ~ s.host.replace('.', '-') ~ '-' ~ i.port %}
          {%- set router = Router(i.router).value %}
      - traefik.{{ router }}.routers.{{ name }}.entrypoints={% if i.hostport %}{{ Protocol(i.protocol).value }}-{{ i.hostport }}{% else %}web-secure{% endif %}
          {%- if i.router != Router.udp %}
            {%- set domains = ([i.tls.main] + i.tls.sans) if (i.tls and i.tls.main) else i.domain.split(',') %}
      - traefik.{{ router }}.routers.{{ name }}.rule={% for d in domains %}Host{% if i.router == Router.tcp %}SNI{% endif %}(`{{ d }}`){% if not loop.last %} || {% endif %}{% endfor %}{% if i.path_prefix %} && PathPrefix(`{{ i.path_prefix }}`){% endif %}
      - traefik.{{ router }}.routers.{{ name }}.tls.certresolver=letsencrypt
            {%- if i.tls.main %}
      - traefik.{{ router }}.routers.{{ name }}.tls.domains[0].main={{ i.tls.main }}
              {%- for s in i.tls.sans %}
      - traefik.{{ router }}.routers.{{ name }}.tls.domains[0].sans[{{ loop.index0 }}]={{ s }}
              {%- endfor %}
            {%- endif %}
          {%- endif %}
      - traefik.{{ router }}.routers.{{ name }}.service={{ name }}
          {%- if i.path_prefix and i.path_remove %}
      - traefik.{{ router }}.middlewares.removeServiceSelector.stripPrefix.prefixes={{ i.path_prefix }}
          {%- endif %}
          {%- if i.middlewares %}
      - traefik.{{ router }}.routers.{{ name }}.middlewares={{ i.middlewares | join(',') }}
          {%- endif %}
      - traefik.{{ router }}.services.{{ name }}.loadbalancer.server.port={{ i.port }}
        {%- endif %}
      {%- endfor %}
    {%- endif %}
    {%- for l in s.labels %}
      - {{ l }}
    {%- endfor %}    
  {%- endif %}
  {%- if has_ingress or p.services | length > 1 %}
    networks:
    {%- if p.services | length > 1 %}
      - default
    {%- endif %}
    {%- if has_ingress %}
      - proxynet
    {%- endif %}
  {%- endif %}
    dns:
      - 172.30.0.253
    restart: {{ s.restart }}
  {%- if s.volumes %}
    volumes:
    {%- for v in s.volumes %}
      {%- if ':' in v %}
      - '{{ v }}'
      {%- else %}
        {%- set source = '.' ~ v %}
        {%- set target = v %}
      - '{{ source }}:{{ target }}'
      {%- endif %}
    {%- endfor %}
  {%- endif %}
  {%- for k, v in s.additional_properties.items() %}
    {%- if v is string or v is number or v is boolean or v is none %}
    {{ k }}: {{ v }}
    {%- else %}
    {{ k }}:
{{ v | to_yaml | indent(6, first=True) }}
    {%- endif %}
  {%- endfor %}
{%- endfor %}
