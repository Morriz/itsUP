openapi: 3.1.0
info:
  title: FastAPI
  version: 0.1.0
paths:
  /hook:
    post:
      summary: Webhook Handler
      operationId: webhook_handler_hook_post
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                type: string
                title: Response Webhook Handler Hook Post
  /update-upstream/{project}/{service}:
    get:
      summary: Get Hook Handler
      description: Handle requests to update the upstream
      operationId: get_hook_handler_update_upstream__project___service__get
      security:
      - APIKeyQuery: []
      - APIKeyHeader: []
      - HTTPBearer: []
      parameters:
      - name: project
        in: path
        required: true
        schema:
          type: string
          title: Project
      - name: service
        in: path
        required: true
        schema:
          type: string
          title: Service
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema: {}
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
  /update-upstream/{project}:
    get:
      summary: Get Hook Handler
      description: Handle requests to update the upstream
      operationId: get_hook_handler_update_upstream__project__get
      security:
      - APIKeyQuery: []
      - APIKeyHeader: []
      - HTTPBearer: []
      parameters:
      - name: project
        in: path
        required: true
        schema:
          type: string
          title: Project
      - name: service
        in: query
        required: false
        schema:
          type: string
          title: Service
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema: {}
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
  /projects/{project}:
    get:
      summary: Get Projects Handler
      description: Get the list of all or one project
      operationId: get_projects_handler_projects__project__get
      security:
      - APIKeyQuery: []
      - APIKeyHeader: []
      - HTTPBearer: []
      parameters:
      - name: project
        in: path
        required: true
        schema:
          type: string
          title: Project
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Project-Output'
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
  /projects:
    get:
      summary: Get Projects Handler
      description: Get the list of all or one project
      operationId: get_projects_handler_projects_get
      security:
      - APIKeyQuery: []
      - APIKeyHeader: []
      - HTTPBearer: []
      parameters:
      - name: project
        in: query
        required: false
        schema:
          type: string
          title: Project
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Project-Output'
                title: Response Get Projects Handler Projects Get
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
    put:
      tags:
      - Project
      summary: Upsert Project Handler
      description: Create or update a project
      operationId: upsert_project_handler_projects_put
      security:
      - APIKeyQuery: []
      - APIKeyHeader: []
      - HTTPBearer: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Project-Input'
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema: {}
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
    post:
      tags:
      - Project
      summary: Upsert Project Handler
      description: Create or update a project
      operationId: upsert_project_handler_projects_post
      security:
      - APIKeyQuery: []
      - APIKeyHeader: []
      - HTTPBearer: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Project-Input'
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema: {}
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
  /projects/{project}/services/{service}:
    get:
      summary: Get Project Services Handler
      description: Get the list of a project's services, or a specific one
      operationId: get_project_services_handler_projects__project__services__service__get
      security:
      - APIKeyQuery: []
      - APIKeyHeader: []
      - HTTPBearer: []
      parameters:
      - name: project
        in: path
        required: true
        schema:
          type: string
          title: Project
      - name: service
        in: path
        required: true
        schema:
          type: string
          title: Service
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Service-Output'
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
  /projects/{project}/services:
    get:
      summary: Get Project Services Handler
      description: Get the list of a project's services, or a specific one
      operationId: get_project_services_handler_projects__project__services_get
      security:
      - APIKeyQuery: []
      - APIKeyHeader: []
      - HTTPBearer: []
      parameters:
      - name: project
        in: path
        required: true
        schema:
          type: string
          title: Project
      - name: service
        in: query
        required: false
        schema:
          type: string
          title: Service
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Service-Output'
                title: Response Get Project Services Handler Projects  Project  Services
                  Get
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
  /services:
    get:
      summary: Get Services Handler
      description: Get the list of all services
      operationId: get_services_handler_services_get
      security:
      - APIKeyQuery: []
      - APIKeyHeader: []
      - HTTPBearer: []
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Service-Output'
                title: Response Get Services Handler Services Get
    put:
      tags:
      - Service
      summary: Upsert Service Handler
      description: Create or update a service
      operationId: upsert_service_handler_services_put
      security:
      - APIKeyQuery: []
      - APIKeyHeader: []
      - HTTPBearer: []
      parameters:
      - name: project
        in: query
        required: true
        schema:
          type: string
          title: Project
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Service-Input'
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema: {}
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
    post:
      tags:
      - Service
      summary: Upsert Service Handler
      description: Create or update a service
      operationId: upsert_service_handler_services_post
      security:
      - APIKeyQuery: []
      - APIKeyHeader: []
      - HTTPBearer: []
      parameters:
      - name: project
        in: query
        required: true
        schema:
          type: string
          title: Project
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Service-Input'
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema: {}
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
  /projects/{project}/services/{service}/env:
    patch:
      tags:
      - Env
      summary: Patch Env Handler
      description: Update env for a project service
      operationId: patch_env_handler_projects__project__services__service__env_patch
      security:
      - APIKeyQuery: []
      - APIKeyHeader: []
      - HTTPBearer: []
      parameters:
      - name: project
        in: path
        required: true
        schema:
          type: string
          title: Project
      - name: service
        in: path
        required: true
        schema:
          type: string
          title: Service
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Env'
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema: {}
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
components:
  schemas:
    Env:
      properties: {}
      additionalProperties: true
      type: object
      title: Env
    HTTPValidationError:
      properties:
        detail:
          items:
            $ref: '#/components/schemas/ValidationError'
          type: array
          title: Detail
      type: object
      title: HTTPValidationError
    Ingress:
      properties:
        domain:
          type: string
          title: Domain
        hostport:
          type: integer
          title: Hostport
        passthrough:
          type: boolean
          title: Passthrough
          default: false
        path_prefix:
          type: string
          title: Path Prefix
        path_remove:
          type: boolean
          title: Path Remove
          default: false
        port:
          type: integer
          title: Port
          default: 8080
        protocol:
          allOf:
          - $ref: '#/components/schemas/Protocol'
          default: tcp
        proxyprotocol:
          anyOf:
          - $ref: '#/components/schemas/ProxyProtocol'
          - type: 'null'
          default: '2'
        router:
          allOf:
          - $ref: '#/components/schemas/Router'
          default: http
        tls:
          allOf:
          - $ref: '#/components/schemas/TLS'
        expose:
          type: boolean
          title: Expose
          default: false
      type: object
      title: Ingress
      description: Ingress model
    Project-Input:
      properties:
        description:
          type: string
          title: Description
        env:
          allOf:
          - $ref: '#/components/schemas/Env'
        enabled:
          type: boolean
          title: Enabled
          default: true
        name:
          type: string
          title: Name
        services:
          items:
            $ref: '#/components/schemas/Service-Input'
          type: array
          title: Services
          default: []
      type: object
      required:
      - name
      title: Project
      description: Project model
    Project-Output:
      properties:
        description:
          type: string
          title: Description
        env:
          allOf:
          - $ref: '#/components/schemas/Env'
        enabled:
          type: boolean
          title: Enabled
          default: true
        name:
          type: string
          title: Name
        services:
          items:
            $ref: '#/components/schemas/Service-Output'
          type: array
          title: Services
          default: []
      type: object
      required:
      - name
      title: Project
      description: Project model
    Protocol:
      type: string
      enum:
      - tcp
      - udp
      title: Protocol
      description: Protocol enum
    ProxyProtocol:
      type: string
      enum:
      - '1'
      - '2'
      title: ProxyProtocol
      description: ProxyProtocol enum
    Router:
      type: string
      enum:
      - http
      - tcp
      - udp
      title: Router
      description: Router enum
    Service-Input:
      properties:
        additional_properties:
          type: object
          title: Additional Properties
          default: {}
        command:
          anyOf:
          - type: string
          - type: 'null'
          title: Command
        depends_on:
          anyOf:
          - items:
              type: string
            type: array
          - type: object
          title: Depends On
          default: []
        env:
          allOf:
          - $ref: '#/components/schemas/Env'
          default: {}
        host:
          type: string
          title: Host
        image:
          type: string
          title: Image
        ingress:
          items:
            $ref: '#/components/schemas/Ingress'
          type: array
          title: Ingress
        labels:
          items:
            type: string
          type: array
          title: Labels
          default: []
        restart:
          type: string
          title: Restart
          default: unless-stopped
        volumes:
          items:
            type: string
          type: array
          title: Volumes
          default: []
      type: object
      required:
      - host
      title: Service
      description: Service model
    Service-Output:
      properties:
        additional_properties:
          type: object
          title: Additional Properties
          default: {}
        command:
          anyOf:
          - type: string
          - type: 'null'
          title: Command
        depends_on:
          anyOf:
          - items:
              type: string
            type: array
          - type: object
          title: Depends On
          default: []
        env:
          allOf:
          - $ref: '#/components/schemas/Env'
          default: {}
        host:
          type: string
          title: Host
        image:
          type: string
          title: Image
        ingress:
          items:
            $ref: '#/components/schemas/Ingress'
          type: array
          title: Ingress
        labels:
          items:
            type: string
          type: array
          title: Labels
          default: []
        restart:
          type: string
          title: Restart
          default: unless-stopped
        volumes:
          items:
            type: string
          type: array
          title: Volumes
          default: []
      type: object
      required:
      - host
      title: Service
      description: Service model
    TLS:
      properties:
        main:
          type: string
          title: Main
        sans:
          items:
            type: string
          type: array
          title: Sans
          default: []
      type: object
      title: TLS
      description: TLS model
    ValidationError:
      properties:
        loc:
          items:
            anyOf:
            - type: string
            - type: integer
          type: array
          title: Location
        msg:
          type: string
          title: Message
        type:
          type: string
          title: Error Type
      type: object
      required:
      - loc
      - msg
      - type
      title: ValidationError
  securitySchemes:
    APIKeyQuery:
      type: apiKey
      in: query
      name: apikey
    APIKeyHeader:
      type: apiKey
      in: header
      name: X-API-KEY
    HTTPBearer:
      type: http
      scheme: bearer
